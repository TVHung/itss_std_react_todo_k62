[{"/home/ec2-user/environment/itss_std_react_todo_k62/src/index.js":"1","/home/ec2-user/environment/itss_std_react_todo_k62/src/App.js":"2","/home/ec2-user/environment/itss_std_react_todo_k62/src/reportWebVitals.js":"3","/home/ec2-user/environment/itss_std_react_todo_k62/src/components/Todo.js":"4","/home/ec2-user/environment/itss_std_react_todo_k62/src/components/TodoItem.js":"5","/home/ec2-user/environment/itss_std_react_todo_k62/src/components/Input.js":"6","/home/ec2-user/environment/itss_std_react_todo_k62/src/components/Filter.js":"7","/home/ec2-user/environment/itss_std_react_todo_k62/src/hooks/storage.js":"8","/home/ec2-user/environment/itss_std_react_todo_k62/src/lib/util.js":"9","/home/ec2-user/environment/itss_std_react_todo_k62/src/hooks/firebase.js":"10","/home/ec2-user/environment/itss_std_react_todo_k62/src/services/firebaseService.js":"11","/home/ec2-user/environment/itss_std_react_todo_k62/src/lib/firebase.js":"12"},{"size":500,"mtime":1617695093152,"results":"13","hashOfConfig":"14"},{"size":274,"mtime":1621482100266,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1617695093152,"results":"16","hashOfConfig":"14"},{"size":1793,"mtime":1621486400388,"results":"17","hashOfConfig":"14"},{"size":658,"mtime":1621481845592,"results":"18","hashOfConfig":"14"},{"size":786,"mtime":1621481845592,"results":"19","hashOfConfig":"14"},{"size":908,"mtime":1621481845592,"results":"20","hashOfConfig":"14"},{"size":986,"mtime":1621481845596,"results":"21","hashOfConfig":"14"},{"size":68,"mtime":1617695093152,"results":"22","hashOfConfig":"14"},{"size":1219,"mtime":1621485640392,"results":"23","hashOfConfig":"14"},{"size":780,"mtime":1621483910148,"results":"24","hashOfConfig":"14"},{"size":410,"mtime":1621483925372,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"vh3dly",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ec2-user/environment/itss_std_react_todo_k62/src/index.js",[],["54","55"],"/home/ec2-user/environment/itss_std_react_todo_k62/src/App.js",[],"/home/ec2-user/environment/itss_std_react_todo_k62/src/reportWebVitals.js",[],"/home/ec2-user/environment/itss_std_react_todo_k62/src/components/Todo.js",["56","57","58"],"/home/ec2-user/environment/itss_std_react_todo_k62/src/components/TodoItem.js",[],"/home/ec2-user/environment/itss_std_react_todo_k62/src/components/Input.js",["59"],"import React, { useState } from 'react';\n/* \n  【inputコンポーネント】\n　・新しいTodoを作成するINPUTフィールドを作成するコンポーネント\n　・Enterをクリックされたら入力された文字を使って新しいTodoを作成する\n*/\nfunction Input( { onAdd } ) {\n  const [text, setText] = React.useState('');\n\n  const handleChange = e => setText(e.target.value);\n\n  const handleKeyDown = e => {\n    if (e.keyCode === 13) {\n      onAdd(text);\n      setText('');\n    }\n  };\n\n  return (\n    <div className=\"panel-block\">\n      <input\n        class=\"input\"\n        type=\"text\"\n        placeholder=\"Enter to add\"\n        value={text}\n        onChange={handleChange}\n        onKeyDown={handleKeyDown}\n      />\n    </div>\n  );\n}\n\nexport default Input;\n","/home/ec2-user/environment/itss_std_react_todo_k62/src/components/Filter.js",["60","61","62"],"/* \n  【Filterコンポーネント】\n　・該当するTodoをステータス毎にで分けてリスト表示する\n　・タブで表示する\n　・サポートするステータスは「すべて」「未完了」「完了済み」\n*/\nfunction Filter({ value, onChange }) {\n\n  const handleClick = (key, e) => {\n    e.preventDefault();\n    onChange(key);\n  };\n\n  return (\n    <div className=\"panel-tabs\">\n      <a\n        href=\"#\"\n        onClick={handleClick.bind(null, 'ALL')}\n        className={value === 'ALL' ?  'is-active' : ''}\n      >全て</a>\n      <a\n        href=\"#\"\n        onClick={handleClick.bind(null, 'TODO')}\n        className={value === 'TODO' ?  'is-active' : ''}\n      >未完了</a>\n      <a\n        href=\"#\"\n        onClick={handleClick.bind(null, 'DONE')}\n        className={value === 'DONE' ?  'is-active' : ''}\n      >完了済み</a>\n    </div>\n  );\n}\n\nexport default Filter","/home/ec2-user/environment/itss_std_react_todo_k62/src/hooks/storage.js",[],"/home/ec2-user/environment/itss_std_react_todo_k62/src/lib/util.js",[],"/home/ec2-user/environment/itss_std_react_todo_k62/src/hooks/firebase.js",["63"],"/home/ec2-user/environment/itss_std_react_todo_k62/src/services/firebaseService.js",["64"],"import firebaseInit from '../lib/firebase'\nimport firebase from \"firebase\";\n\nexport const db = firebaseInit.firestore()\n\nexport default class FirebaseService {\n\n  static async getAllDocumentsOfCollection(collection) {\n    let results = []\n    const snapshot = await db.collection(collection).get()\n\n    snapshot.forEach(doc => {\n      results.push({...doc.data(), id: doc.id})\n    });\n    return results\n  }\n\n  static async addDocumentToCollection(collection, data) {\n    return db.collection(collection).add(data)\n  }\n\n  static async updateDocumentToCollection(collection, document, data) {\n    return db.collection(collection).doc(document).update(data)\n  }\n\n  static async deleteDocument(collection, document) {\n    return db.collection(collection).doc(document).delete()\n  }\n}","/home/ec2-user/environment/itss_std_react_todo_k62/src/lib/firebase.js",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":1,"column":17,"nodeType":"71","messageId":"72","endLine":1,"endColumn":25},{"ruleId":"69","severity":1,"message":"73","line":19,"column":9,"nodeType":"71","messageId":"72","endLine":19,"endColumn":15},{"ruleId":"74","severity":1,"message":"75","line":35,"column":42,"nodeType":"76","messageId":"77","endLine":35,"endColumn":44},{"ruleId":"69","severity":1,"message":"70","line":1,"column":17,"nodeType":"71","messageId":"72","endLine":1,"endColumn":25},{"ruleId":"78","severity":1,"message":"79","line":16,"column":7,"nodeType":"80","endLine":20,"endColumn":8},{"ruleId":"78","severity":1,"message":"79","line":21,"column":7,"nodeType":"80","endLine":25,"endColumn":8},{"ruleId":"78","severity":1,"message":"79","line":26,"column":7,"nodeType":"80","endLine":30,"endColumn":8},{"ruleId":"74","severity":1,"message":"81","line":39,"column":20,"nodeType":"76","messageId":"82","endLine":39,"endColumn":22},{"ruleId":"69","severity":1,"message":"83","line":2,"column":8,"nodeType":"71","messageId":"72","endLine":2,"endColumn":16},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'getKey' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","Array.prototype.map() expects a return value from arrow function.","expectedInside","'firebase' is defined but never used.","no-global-assign","no-unsafe-negation"]